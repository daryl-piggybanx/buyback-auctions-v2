/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RequestsRouteImport } from './routes/requests'
import { Route as RequestAuctionRouteImport } from './routes/request-auction'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as NotificationsRouteImport } from './routes/notifications'
import { Route as FavoritesRouteImport } from './routes/favorites'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AuctionsRouteImport } from './routes/auctions'
import { Route as ArchivedRouteImport } from './routes/archived'
import { Route as ArchiveRouteImport } from './routes/archive'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RequestsIndexRouteImport } from './routes/requests/index'
import { Route as AuctionsIndexRouteImport } from './routes/auctions/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as RequestsRequestIdRouteImport } from './routes/requests/$requestId'
import { Route as AuctionsAuctionIdRouteImport } from './routes/auctions/$auctionId'
import { Route as AdminRequestsRouteImport } from './routes/admin/requests'
import { Route as AdminBlacklistRouteImport } from './routes/admin/blacklist'
import { Route as AdminRequestsIndexRouteImport } from './routes/admin/requests/index'
import { Route as AdminProfilesIndexRouteImport } from './routes/admin/profiles/index'
import { Route as AdminRequestsRequestIdRouteImport } from './routes/admin/requests/$requestId'
import { Route as AdminProfilesProfileIdRouteImport } from './routes/admin/profiles/$profileId'

const RequestsRoute = RequestsRouteImport.update({
  id: '/requests',
  path: '/requests',
  getParentRoute: () => rootRouteImport,
} as any)
const RequestAuctionRoute = RequestAuctionRouteImport.update({
  id: '/request-auction',
  path: '/request-auction',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const NotificationsRoute = NotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => rootRouteImport,
} as any)
const FavoritesRoute = FavoritesRouteImport.update({
  id: '/favorites',
  path: '/favorites',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuctionsRoute = AuctionsRouteImport.update({
  id: '/auctions',
  path: '/auctions',
  getParentRoute: () => rootRouteImport,
} as any)
const ArchivedRoute = ArchivedRouteImport.update({
  id: '/archived',
  path: '/archived',
  getParentRoute: () => rootRouteImport,
} as any)
const ArchiveRoute = ArchiveRouteImport.update({
  id: '/archive',
  path: '/archive',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RequestsIndexRoute = RequestsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RequestsRoute,
} as any)
const AuctionsIndexRoute = AuctionsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuctionsRoute,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)
const RequestsRequestIdRoute = RequestsRequestIdRouteImport.update({
  id: '/$requestId',
  path: '/$requestId',
  getParentRoute: () => RequestsRoute,
} as any)
const AuctionsAuctionIdRoute = AuctionsAuctionIdRouteImport.update({
  id: '/$auctionId',
  path: '/$auctionId',
  getParentRoute: () => AuctionsRoute,
} as any)
const AdminRequestsRoute = AdminRequestsRouteImport.update({
  id: '/requests',
  path: '/requests',
  getParentRoute: () => AdminRoute,
} as any)
const AdminBlacklistRoute = AdminBlacklistRouteImport.update({
  id: '/blacklist',
  path: '/blacklist',
  getParentRoute: () => AdminRoute,
} as any)
const AdminRequestsIndexRoute = AdminRequestsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRequestsRoute,
} as any)
const AdminProfilesIndexRoute = AdminProfilesIndexRouteImport.update({
  id: '/profiles/',
  path: '/profiles/',
  getParentRoute: () => AdminRoute,
} as any)
const AdminRequestsRequestIdRoute = AdminRequestsRequestIdRouteImport.update({
  id: '/$requestId',
  path: '/$requestId',
  getParentRoute: () => AdminRequestsRoute,
} as any)
const AdminProfilesProfileIdRoute = AdminProfilesProfileIdRouteImport.update({
  id: '/profiles/$profileId',
  path: '/profiles/$profileId',
  getParentRoute: () => AdminRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/archive': typeof ArchiveRoute
  '/archived': typeof ArchivedRoute
  '/auctions': typeof AuctionsRouteWithChildren
  '/auth': typeof AuthRoute
  '/favorites': typeof FavoritesRoute
  '/notifications': typeof NotificationsRoute
  '/profile': typeof ProfileRoute
  '/request-auction': typeof RequestAuctionRoute
  '/requests': typeof RequestsRouteWithChildren
  '/admin/blacklist': typeof AdminBlacklistRoute
  '/admin/requests': typeof AdminRequestsRouteWithChildren
  '/auctions/$auctionId': typeof AuctionsAuctionIdRoute
  '/requests/$requestId': typeof RequestsRequestIdRoute
  '/admin/': typeof AdminIndexRoute
  '/auctions/': typeof AuctionsIndexRoute
  '/requests/': typeof RequestsIndexRoute
  '/admin/profiles/$profileId': typeof AdminProfilesProfileIdRoute
  '/admin/requests/$requestId': typeof AdminRequestsRequestIdRoute
  '/admin/profiles': typeof AdminProfilesIndexRoute
  '/admin/requests/': typeof AdminRequestsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/archive': typeof ArchiveRoute
  '/archived': typeof ArchivedRoute
  '/auth': typeof AuthRoute
  '/favorites': typeof FavoritesRoute
  '/notifications': typeof NotificationsRoute
  '/profile': typeof ProfileRoute
  '/request-auction': typeof RequestAuctionRoute
  '/admin/blacklist': typeof AdminBlacklistRoute
  '/auctions/$auctionId': typeof AuctionsAuctionIdRoute
  '/requests/$requestId': typeof RequestsRequestIdRoute
  '/admin': typeof AdminIndexRoute
  '/auctions': typeof AuctionsIndexRoute
  '/requests': typeof RequestsIndexRoute
  '/admin/profiles/$profileId': typeof AdminProfilesProfileIdRoute
  '/admin/requests/$requestId': typeof AdminRequestsRequestIdRoute
  '/admin/profiles': typeof AdminProfilesIndexRoute
  '/admin/requests': typeof AdminRequestsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/archive': typeof ArchiveRoute
  '/archived': typeof ArchivedRoute
  '/auctions': typeof AuctionsRouteWithChildren
  '/auth': typeof AuthRoute
  '/favorites': typeof FavoritesRoute
  '/notifications': typeof NotificationsRoute
  '/profile': typeof ProfileRoute
  '/request-auction': typeof RequestAuctionRoute
  '/requests': typeof RequestsRouteWithChildren
  '/admin/blacklist': typeof AdminBlacklistRoute
  '/admin/requests': typeof AdminRequestsRouteWithChildren
  '/auctions/$auctionId': typeof AuctionsAuctionIdRoute
  '/requests/$requestId': typeof RequestsRequestIdRoute
  '/admin/': typeof AdminIndexRoute
  '/auctions/': typeof AuctionsIndexRoute
  '/requests/': typeof RequestsIndexRoute
  '/admin/profiles/$profileId': typeof AdminProfilesProfileIdRoute
  '/admin/requests/$requestId': typeof AdminRequestsRequestIdRoute
  '/admin/profiles/': typeof AdminProfilesIndexRoute
  '/admin/requests/': typeof AdminRequestsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/archive'
    | '/archived'
    | '/auctions'
    | '/auth'
    | '/favorites'
    | '/notifications'
    | '/profile'
    | '/request-auction'
    | '/requests'
    | '/admin/blacklist'
    | '/admin/requests'
    | '/auctions/$auctionId'
    | '/requests/$requestId'
    | '/admin/'
    | '/auctions/'
    | '/requests/'
    | '/admin/profiles/$profileId'
    | '/admin/requests/$requestId'
    | '/admin/profiles'
    | '/admin/requests/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/archive'
    | '/archived'
    | '/auth'
    | '/favorites'
    | '/notifications'
    | '/profile'
    | '/request-auction'
    | '/admin/blacklist'
    | '/auctions/$auctionId'
    | '/requests/$requestId'
    | '/admin'
    | '/auctions'
    | '/requests'
    | '/admin/profiles/$profileId'
    | '/admin/requests/$requestId'
    | '/admin/profiles'
    | '/admin/requests'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/archive'
    | '/archived'
    | '/auctions'
    | '/auth'
    | '/favorites'
    | '/notifications'
    | '/profile'
    | '/request-auction'
    | '/requests'
    | '/admin/blacklist'
    | '/admin/requests'
    | '/auctions/$auctionId'
    | '/requests/$requestId'
    | '/admin/'
    | '/auctions/'
    | '/requests/'
    | '/admin/profiles/$profileId'
    | '/admin/requests/$requestId'
    | '/admin/profiles/'
    | '/admin/requests/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  ArchiveRoute: typeof ArchiveRoute
  ArchivedRoute: typeof ArchivedRoute
  AuctionsRoute: typeof AuctionsRouteWithChildren
  AuthRoute: typeof AuthRoute
  FavoritesRoute: typeof FavoritesRoute
  NotificationsRoute: typeof NotificationsRoute
  ProfileRoute: typeof ProfileRoute
  RequestAuctionRoute: typeof RequestAuctionRoute
  RequestsRoute: typeof RequestsRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/requests': {
      id: '/requests'
      path: '/requests'
      fullPath: '/requests'
      preLoaderRoute: typeof RequestsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/request-auction': {
      id: '/request-auction'
      path: '/request-auction'
      fullPath: '/request-auction'
      preLoaderRoute: typeof RequestAuctionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notifications': {
      id: '/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof NotificationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/favorites': {
      id: '/favorites'
      path: '/favorites'
      fullPath: '/favorites'
      preLoaderRoute: typeof FavoritesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auctions': {
      id: '/auctions'
      path: '/auctions'
      fullPath: '/auctions'
      preLoaderRoute: typeof AuctionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/archived': {
      id: '/archived'
      path: '/archived'
      fullPath: '/archived'
      preLoaderRoute: typeof ArchivedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/archive': {
      id: '/archive'
      path: '/archive'
      fullPath: '/archive'
      preLoaderRoute: typeof ArchiveRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/requests/': {
      id: '/requests/'
      path: '/'
      fullPath: '/requests/'
      preLoaderRoute: typeof RequestsIndexRouteImport
      parentRoute: typeof RequestsRoute
    }
    '/auctions/': {
      id: '/auctions/'
      path: '/'
      fullPath: '/auctions/'
      preLoaderRoute: typeof AuctionsIndexRouteImport
      parentRoute: typeof AuctionsRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/requests/$requestId': {
      id: '/requests/$requestId'
      path: '/$requestId'
      fullPath: '/requests/$requestId'
      preLoaderRoute: typeof RequestsRequestIdRouteImport
      parentRoute: typeof RequestsRoute
    }
    '/auctions/$auctionId': {
      id: '/auctions/$auctionId'
      path: '/$auctionId'
      fullPath: '/auctions/$auctionId'
      preLoaderRoute: typeof AuctionsAuctionIdRouteImport
      parentRoute: typeof AuctionsRoute
    }
    '/admin/requests': {
      id: '/admin/requests'
      path: '/requests'
      fullPath: '/admin/requests'
      preLoaderRoute: typeof AdminRequestsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/blacklist': {
      id: '/admin/blacklist'
      path: '/blacklist'
      fullPath: '/admin/blacklist'
      preLoaderRoute: typeof AdminBlacklistRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/requests/': {
      id: '/admin/requests/'
      path: '/'
      fullPath: '/admin/requests/'
      preLoaderRoute: typeof AdminRequestsIndexRouteImport
      parentRoute: typeof AdminRequestsRoute
    }
    '/admin/profiles/': {
      id: '/admin/profiles/'
      path: '/profiles'
      fullPath: '/admin/profiles'
      preLoaderRoute: typeof AdminProfilesIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/requests/$requestId': {
      id: '/admin/requests/$requestId'
      path: '/$requestId'
      fullPath: '/admin/requests/$requestId'
      preLoaderRoute: typeof AdminRequestsRequestIdRouteImport
      parentRoute: typeof AdminRequestsRoute
    }
    '/admin/profiles/$profileId': {
      id: '/admin/profiles/$profileId'
      path: '/profiles/$profileId'
      fullPath: '/admin/profiles/$profileId'
      preLoaderRoute: typeof AdminProfilesProfileIdRouteImport
      parentRoute: typeof AdminRoute
    }
  }
}

interface AdminRequestsRouteChildren {
  AdminRequestsRequestIdRoute: typeof AdminRequestsRequestIdRoute
  AdminRequestsIndexRoute: typeof AdminRequestsIndexRoute
}

const AdminRequestsRouteChildren: AdminRequestsRouteChildren = {
  AdminRequestsRequestIdRoute: AdminRequestsRequestIdRoute,
  AdminRequestsIndexRoute: AdminRequestsIndexRoute,
}

const AdminRequestsRouteWithChildren = AdminRequestsRoute._addFileChildren(
  AdminRequestsRouteChildren,
)

interface AdminRouteChildren {
  AdminBlacklistRoute: typeof AdminBlacklistRoute
  AdminRequestsRoute: typeof AdminRequestsRouteWithChildren
  AdminIndexRoute: typeof AdminIndexRoute
  AdminProfilesProfileIdRoute: typeof AdminProfilesProfileIdRoute
  AdminProfilesIndexRoute: typeof AdminProfilesIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminBlacklistRoute: AdminBlacklistRoute,
  AdminRequestsRoute: AdminRequestsRouteWithChildren,
  AdminIndexRoute: AdminIndexRoute,
  AdminProfilesProfileIdRoute: AdminProfilesProfileIdRoute,
  AdminProfilesIndexRoute: AdminProfilesIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface AuctionsRouteChildren {
  AuctionsAuctionIdRoute: typeof AuctionsAuctionIdRoute
  AuctionsIndexRoute: typeof AuctionsIndexRoute
}

const AuctionsRouteChildren: AuctionsRouteChildren = {
  AuctionsAuctionIdRoute: AuctionsAuctionIdRoute,
  AuctionsIndexRoute: AuctionsIndexRoute,
}

const AuctionsRouteWithChildren = AuctionsRoute._addFileChildren(
  AuctionsRouteChildren,
)

interface RequestsRouteChildren {
  RequestsRequestIdRoute: typeof RequestsRequestIdRoute
  RequestsIndexRoute: typeof RequestsIndexRoute
}

const RequestsRouteChildren: RequestsRouteChildren = {
  RequestsRequestIdRoute: RequestsRequestIdRoute,
  RequestsIndexRoute: RequestsIndexRoute,
}

const RequestsRouteWithChildren = RequestsRoute._addFileChildren(
  RequestsRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  ArchiveRoute: ArchiveRoute,
  ArchivedRoute: ArchivedRoute,
  AuctionsRoute: AuctionsRouteWithChildren,
  AuthRoute: AuthRoute,
  FavoritesRoute: FavoritesRoute,
  NotificationsRoute: NotificationsRoute,
  ProfileRoute: ProfileRoute,
  RequestAuctionRoute: RequestAuctionRoute,
  RequestsRoute: RequestsRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
